import process from "process";
import fs from 'fs';

import esbuild from "esbuild";
import builtins from "builtin-modules";
import { replace } from "esbuild-plugin-replace";
import woff2base64 from "woff2base64";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/`;

const prod = (process.argv[2] === "production");

let fontReplacement = ''
if (prod) {
	const res = await fetch(`https://esm.sh/country-flag-emoji-polyfill@0.1.4/dist/TwemojiCountryFlags.woff2`, { headers: { 'Content-Type': 'font/woff2' } })
	const data = Buffer.from(await res.arrayBuffer())
	const fontCss = woff2base64({ 'TwemojiCountryFlags.woff2': data }, { 
		fontFaceTemplate: '<%=uri%>', banner: '', fontFamily: 'EmojiAutocompleteFlagPolyfill' 
	})
	fontReplacement = fontCss.woff2
} else {
	fontReplacement = 'https://esm.sh/country-flag-emoji-polyfill@0.1.4/dist/TwemojiCountryFlags.woff2'
}


const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: [
		"src/main.ts",
		"src/styles.css"
	],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	minify: true,
	outdir: "./",
	plugins: [
		replace({ '__emojiFontUrl__': fontReplacement })
	]
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}